<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>import "./libraries/store_data"

double T_setpoint = store_data.setpoint;
double T_current;
double T_ambient;
double heating_setpoint;
double cooling_setpoint;
bool blinds;
bool heater;
double blind_eff = 0.5; //assumed value (change if we find real data)
double solar_effect; //Data from CSV file (Collected from BMS)
double heater_effect = 372;
const double g_value = 0.7; //assumed value (Change if Olena ever responds)
const double mean_window_area_group = 4.25; //mean value of window area for group rooms
const int P = 15; //Swicthing period, 15 min
double heater_turned_on_percentage = 0.0; 



const double hour = 60.0;


import "_/UPPAALLibraries/DataRetrieval"

int time_index = 0;  // Tracks which time step we are at within a day
int day_index = 0;   // Tracks which day we are in

double solar_watt = get_solar_watt(time_index);
double room_temp = get_room_temp(time_index);
double ambient_temp = get_ambient_temp(time_index);
double heating_setpoint = get_heating_setpoint(time_index);
double cooling_setpoint = get_cooling_setpoint(time_index);

// If we reach the end of a day's data, advance to the next day
bool advance_day() {
    return load_next_day("/path/to/your/data");
}


double S_t(double t) {
    return solar_effect[t] * g_value * mean_window_area_group;
}


double H_t(double heating_setpoint, double T_current) {
    if (T_current &lt;= heating_setpoint) {
        heater_turned_on_percentage += 0.25;
        if (heater_turned_on_percentage &gt; 1.0) {
            heater_turned_on_percentage = 1.0;
        }
    }
    else if (T_current &gt; heating_setpoint) {
        heater_turned_on_percentage -= 0.25;
        if (heater_turned_on_percentage &lt; 0.0) {
            heater_turned_on_percentage = 0.0;
        }
    }
    return heater_effect * heater_turned_on_percentage;
}




</declaration>
	<template>
		<name x="5" y="5">Optimization</name>
		<declaration>// Place local declarations here.
</declaration>
		<location id="id0" x="0" y="0">
			<label kind="invariant" x="-212" y="25">D'== (T_setpoint - T_room) * (T_setpoint - T_room)</label>
		</location>
		<init ref="id0"/>
	</template>
	<template>
		<name>DataCollection</name>
		<declaration>clock x;
</declaration>
		<location id="id1" x="0" y="0">
			<label kind="invariant" x="-10" y="17">x &lt;= P</label>
		</location>
		<init ref="id1"/>
		<transition id="id2" controllable="false">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-34" y="-127">x &gt;= P</label>
			<label kind="assignment" x="-76" y="-178">fetch_new_data(),
x = 0</label>
			<nail x="-85" y="-136"/>
			<nail x="76" y="-136"/>
		</transition>
	</template>
	<template>
		<name>Room</name>
		<location id="id3" x="0" y="0">
			<label kind="invariant" x="-10" y="17">Tr' = ((ambient_temp[t] - Tr[t]) * alpha_a + 
S_t(t) * alpha_s +
H_t(t) * alpha_h +
alpha_v)</label>
		</location>
		<init ref="id3"/>
	</template>
	<template>
		<name>ModBlinds</name>
		<location id="id4" x="238" y="0">
			<name x="221" y="-34">Down</name>
		</location>
		<location id="id5" x="-204" y="0">
			<name x="-214" y="-34">Up</name>
		</location>
		<init ref="id5"/>
		<transition id="id6">
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="263" y="-110">x == P,
blinds == 0 &amp;&amp; T_room &gt;= T_setpoint</label>
			<label kind="assignment" x="297" y="0">x = 0</label>
			<nail x="340" y="-68"/>
			<nail x="340" y="0"/>
		</transition>
		<transition id="id7">
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="-501" y="-110">x == P,
blinds == 1 &amp;&amp; T_room &lt;= T_setpoint</label>
			<label kind="assignment" x="-297" y="0">x = 0</label>
			<nail x="-306" y="-68"/>
			<nail x="-306" y="0"/>
		</transition>
		<transition id="id8">
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-127" y="-153">x == P,
blinds == 0 &amp;&amp; T_room &lt; T_setpoint</label>
			<label kind="assignment" x="-59" y="-110">x = 0, blinds = 1</label>
			<nail x="8" y="-85"/>
		</transition>
		<transition id="id9">
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="-127" y="8">x == P,
blinds == 1 &amp;&amp; T_room &gt; T_setpoint</label>
			<label kind="assignment" x="-59" y="51">x = 0, blinds = 0</label>
		</transition>
	</template>
	<template>
		<name>ModHeater</name>
		<location id="id10" x="751" y="141">
			<name x="734" y="107">Off</name>
		</location>
		<location id="id11" x="309" y="141">
			<name x="299" y="107">On</name>
		</location>
		<transition id="id12">
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="776" y="31">x == P,
heater == 0 &amp;&amp; T_room &gt; T_setpoint</label>
			<label kind="assignment" x="810" y="141">x = 0</label>
			<nail x="853" y="73"/>
			<nail x="853" y="141"/>
		</transition>
		<transition id="id13">
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="12" y="31">x == P,
heater == 1 &amp;&amp; T_room &lt; T_setpoint</label>
			<label kind="assignment" x="216" y="141">x = 0</label>
			<nail x="207" y="73"/>
			<nail x="207" y="141"/>
		</transition>
		<transition id="id14">
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="386" y="-12">x == P,
heater == 0 &amp;&amp; T_room &lt; T_setpoint</label>
			<label kind="assignment" x="454" y="31">x = 0, heater = 1</label>
			<nail x="521" y="56"/>
		</transition>
		<transition id="id15">
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="guard" x="386" y="149">x == P,
heater == 1 &amp;&amp; T_room &gt; T_setpoint</label>
			<label kind="assignment" x="454" y="192">x = 0, heater = 0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system Process;
</system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
