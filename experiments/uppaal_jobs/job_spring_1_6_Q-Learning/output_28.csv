Options for the verification:
  Generating no trace
  Search order is breadth first
  Using conservative space optimisation
  Seed is 1747650088
  State space representation uses minimal constraint systems with future testing
  Using HashMap + Compress integers for discrete state storage
[2K
Verifying formula 1 at uppaal.q:1
 -- Throughput: 88117 runs/sec, Load: 130 runs[K -- Throughput: 94872 runs/sec, Load: 199 runs[K -- Throughput: 95439 runs/sec, Load: 87 runs[K -- Throughput: 95733 runs/sec, Load: 199 runs[K -- Throughput: 136587 runs/sec, Load: 101 runs[K -- Throughput: 108257 runs/sec, Load: 199 runs[K -- Throughput: 87570 runs/sec, Load: 131 runs[K -- Throughput: 87266 runs/sec, Load: 199 runs[K -- Throughput: 87279 runs/sec, Load: 67 runs[K -- Throughput: 87110 runs/sec, Load: 185 runs[K -- Throughput: 87728 runs/sec, Load: 4 runs[K -- Throughput: 87726 runs/sec, Load: 122 runs[K -- Throughput: 88010 runs/sec, Load: 199 runs[K -- Throughput: 87936 runs/sec, Load: 60 runs[K -- Throughput: 87590 runs/sec, Load: 178 runs[K -- Throughput: 87898 runs/sec, Load: 199 runs[K -- Throughput: 87929 runs/sec, Load: 116 runs[K -- Throughput: 88095 runs/sec, Load: 199 runs[K -- Throughput: 88114 runs/sec, Load: 54 runs[K -- Throughput: 87873 runs/sec, Load: 172 runs[K -- Throughput: 88582 runs/sec, Load: 199 runs[K -- Throughput: 87578 runs/sec, Load: 112 runs[K -- Throughput: 87931 runs/sec, Load: 199 runs[K -- Throughput: 88399 runs/sec, Load: 50 runs[K -- Throughput: 87891 runs/sec, Load: 169 runs[K -- Throughput: 88878 runs/sec, Load: 199 runs[K -- Throughput: 87652 runs/sec, Load: 109 runs[K -- Throughput: 88216 runs/sec, Load: 199 runs[K -- Throughput: 87259 runs/sec, Load: 47 runs[K -- Throughput: 87549 runs/sec, Load: 165 runs[K -- Throughput: 88169 runs/sec, Load: 199 runs[K -- Throughput: 87891 runs/sec, Load: 103 runs[K -- Throughput: 87893 runs/sec, Load: 199 runs[K -- Throughput: 87945 runs/sec, Load: 41 runs[K -- Throughput: 88153 runs/sec, Load: 160 runs[K -- Throughput: 88226 runs/sec, Load: 199 runs[K -- Throughput: 88283 runs/sec, Load: 98 runs[K -- Throughput: 88113 runs/sec, Load: 199 runs[K -- Throughput: 88272 runs/sec, Load: 36 runs[K -- Throughput: 87887 runs/sec, Load: 155 runs[K -- Throughput: 88032 runs/sec, Load: 199 runs[K -- Throughput: 87849 runs/sec, Load: 93 runs[K -- Throughput: 88149 runs/sec, Load: 199 runs[K -- Throughput: 88222 runs/sec, Load: 31 runs[K -- Throughput: 87804 runs/sec, Load: 150 runs[K -- Throughput: 87876 runs/sec, Load: 199 runs[K -- Throughput: 87704 runs/sec, Load: 87 runs[K -- Throughput: 87088 runs/sec, Load: 199 runs[K -- Throughput: 87546 runs/sec, Load: 24 runs[K -- Throughput: 87665 runs/sec, Load: 142 runs[K -- Throughput: 87537 runs/sec, Load: 199 runs[K -- Throughput: 88054 runs/sec, Load: 79 runs[K -- Throughput: 87732 runs/sec, Load: 198 runs[K -- Throughput: 87994 runs/sec, Load: 17 runs[K -- Throughput: 87453 runs/sec, Load: 136 runs[K -- Throughput: 88140 runs/sec, Load: 199 runs[K -- Throughput: 87877 runs/sec, Load: 74 runs[K -- Throughput: 88409 runs/sec, Load: 193 runs[K -- Throughput: 88300 runs/sec, Load: 13 runs[K -- Throughput: 88036 runs/sec, Load: 132 runs[K -- Throughput: 88391 runs/sec, Load: 199 runs[K -- Throughput: 88089 runs/sec, Load: 71 runs[K -- Throughput: 87588 runs/sec, Load: 189 runs[K -- Throughput: 87444 runs/sec, Load: 8 runs[K -- Throughput: 87905 runs/sec, Load: 126 runs[K -- Throughput: 88412 runs/sec, Load: 199 runs[K -- Throughput: 88588 runs/sec, Load: 65 runs[K -- Throughput: 87901 runs/sec, Load: 185 runs[K -- Throughput: 88207 runs/sec, Load: 4 runs[K -- Throughput: 87906 runs/sec, Load: 123 runs[K -- Throughput: 88169 runs/sec, Load: 199 runs[K -- Throughput: 88226 runs/sec, Load: 61 runs[K -- Throughput: 88172 runs/sec, Load: 180 runs[K[2K -- Formula is satisfied.
(9000 runs)
Learning statistics for best strategy: 
	Number of resets: 0
	Number of iterations in last reset: 1
	Number of iterations in total: 1


 -- States explored : 6667386 states
 -- CPU user time used : 74657 ms
 -- Virtual memory used : 65732 KiB
 -- Resident memory used : 25428 KiB
[2K
Verifying formula 2 at uppaal.q:2
[2K -- Formula is satisfied.
blocked:
[0]: (0,0) (30.000002,0)
blinds:
[0]: (0,1) (0,0) (30,0) (30.000002,1)
cost:
[0]: (0,0) (30.000002,0)
T_r:
[0]: (0,0) (0,21.51688064826834) (1,21.5166175635726) (2,21.51572344872708) (3,21.51479644809792) (4,21.51386998829071) (5,21.51294406898977) (6,21.51201868987976) (7,21.51109385064554) (8,21.510182795738) (9,21.50927227234935) (10,21.50836228016949) (11,21.50745281888852) (12,21.50654388819671) (13,21.50560187657047) (14,21.5046604145236) (15,21.50371950173544) (16,21.50277913788558) (17,21.50180538129865) (18,21.50083219281141) (19,21.49985957209245) (20,21.49888751881051) (21,21.49791603263455) (22,21.49694511323371) (23,21.49597476027732) (24,21.49500497343492) (25,21.49407074936759) (26,21.49313707033627) (27,21.49220393602299) (28,21.49130579897992) (29,21.49040818591932) (30.000002,21.48951109474236)
H:
[0]: (0,0) (0,19.5) (30.000002,19.5)
C:
[0]: (0,0) (0,23.5) (30.000002,23.5)
 -- States explored : 371 states
 -- CPU user time used : 8 ms
 -- Virtual memory used : 65732 KiB
 -- Resident memory used : 25548 KiB
