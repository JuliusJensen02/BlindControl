Options for the verification:
  Generating no trace
  Search order is breadth first
  Using conservative space optimisation
  Seed is 1747651900
  State space representation uses minimal constraint systems with future testing
  Using HashMap + Compress integers for discrete state storage
[2K
Verifying formula 1 at uppaal.q:1
 -- Throughput: 111402 runs/sec, Load: 150 runs[K -- Throughput: 99203 runs/sec, Load: 0 runs[K -- Throughput: 94014 runs/sec, Load: 134 runs[K -- Throughput: 89856 runs/sec, Load: 199 runs[K -- Throughput: 86267 runs/sec, Load: 82 runs[K -- Throughput: 86082 runs/sec, Load: 199 runs[K -- Throughput: 86845 runs/sec, Load: 16 runs[K -- Throughput: 86330 runs/sec, Load: 133 runs[K -- Throughput: 85906 runs/sec, Load: 199 runs[K -- Throughput: 86448 runs/sec, Load: 67 runs[K -- Throughput: 86868 runs/sec, Load: 184 runs[K -- Throughput: 86267 runs/sec, Load: 1 runs[K -- Throughput: 86944 runs/sec, Load: 119 runs[K -- Throughput: 86560 runs/sec, Load: 199 runs[K -- Throughput: 86617 runs/sec, Load: 53 runs[K -- Throughput: 86337 runs/sec, Load: 170 runs[K -- Throughput: 86410 runs/sec, Load: 199 runs[K -- Throughput: 86172 runs/sec, Load: 103 runs[K -- Throughput: 86331 runs/sec, Load: 199 runs[K -- Throughput: 86470 runs/sec, Load: 36 runs[K -- Throughput: 86668 runs/sec, Load: 153 runs[K -- Throughput: 87320 runs/sec, Load: 199 runs[K -- Throughput: 86148 runs/sec, Load: 89 runs[K -- Throughput: 86457 runs/sec, Load: 199 runs[K -- Throughput: 86930 runs/sec, Load: 23 runs[K -- Throughput: 86808 runs/sec, Load: 141 runs[K -- Throughput: 87314 runs/sec, Load: 199 runs[K -- Throughput: 86277 runs/sec, Load: 76 runs[K -- Throughput: 86510 runs/sec, Load: 193 runs[K -- Throughput: 86749 runs/sec, Load: 10 runs[K -- Throughput: 86689 runs/sec, Load: 127 runs[K -- Throughput: 86587 runs/sec, Load: 199 runs[K -- Throughput: 86632 runs/sec, Load: 61 runs[K -- Throughput: 85886 runs/sec, Load: 178 runs[K -- Throughput: 86684 runs/sec, Load: 199 runs[K -- Throughput: 86503 runs/sec, Load: 112 runs[K -- Throughput: 86668 runs/sec, Load: 199 runs[K -- Throughput: 86487 runs/sec, Load: 46 runs[K -- Throughput: 86202 runs/sec, Load: 163 runs[K -- Throughput: 85636 runs/sec, Load: 199 runs[K -- Throughput: 86333 runs/sec, Load: 96 runs[K -- Throughput: 86442 runs/sec, Load: 199 runs[K -- Throughput: 86310 runs/sec, Load: 29 runs[K -- Throughput: 86019 runs/sec, Load: 146 runs[K -- Throughput: 85902 runs/sec, Load: 199 runs[K -- Throughput: 86412 runs/sec, Load: 78 runs[K -- Throughput: 86227 runs/sec, Load: 195 runs[K -- Throughput: 87005 runs/sec, Load: 12 runs[K -- Throughput: 86006 runs/sec, Load: 130 runs[K -- Throughput: 86294 runs/sec, Load: 199 runs[K -- Throughput: 86272 runs/sec, Load: 63 runs[K -- Throughput: 86131 runs/sec, Load: 179 runs[K -- Throughput: 86624 runs/sec, Load: 199 runs[K -- Throughput: 86257 runs/sec, Load: 113 runs[K -- Throughput: 86699 runs/sec, Load: 199 runs[K -- Throughput: 85937 runs/sec, Load: 47 runs[K -- Throughput: 87015 runs/sec, Load: 165 runs[K -- Throughput: 87269 runs/sec, Load: 199 runs[K -- Throughput: 86941 runs/sec, Load: 100 runs[K -- Throughput: 86830 runs/sec, Load: 199 runs[K -- Throughput: 87732 runs/sec, Load: 36 runs[K -- Throughput: 86582 runs/sec, Load: 155 runs[K -- Throughput: 86292 runs/sec, Load: 199 runs[K -- Throughput: 86530 runs/sec, Load: 88 runs[K -- Throughput: 86980 runs/sec, Load: 199 runs[K -- Throughput: 86948 runs/sec, Load: 23 runs[K -- Throughput: 86055 runs/sec, Load: 140 runs[K -- Throughput: 87209 runs/sec, Load: 199 runs[K -- Throughput: 86890 runs/sec, Load: 76 runs[K -- Throughput: 86725 runs/sec, Load: 193 runs[K -- Throughput: 87499 runs/sec, Load: 11 runs[K -- Throughput: 86617 runs/sec, Load: 130 runs[K -- Throughput: 86627 runs/sec, Load: 199 runs[K -- Throughput: 86852 runs/sec, Load: 64 runs[K -- Throughput: 86269 runs/sec, Load: 181 runs[K -- Throughput: 87589 runs/sec, Load: 199 runs[K[2K -- Formula is satisfied.
(9000 runs)
Learning statistics for best strategy: 
	Number of resets: 0
	Number of iterations in last reset: 1
	Number of iterations in total: 1


 -- States explored : 6667192 states
 -- CPU user time used : 76426 ms
 -- Virtual memory used : 65676 KiB
 -- Resident memory used : 25316 KiB
[2K
Verifying formula 2 at uppaal.q:2
[2K -- Formula is satisfied.
blocked:
[0]: (0,0) (30.000002,0)
blinds:
[0]: (0,1) (0,0) (30,0) (30.000002,0.5)
cost:
[0]: (0,0) (30.000002,0)
T_r:
[0]: (0,0) (0,21.73602395770219) (1,21.73568669273214) (2,21.7346974556315) (3,21.73370879566617) (4,21.73272071249551) (5,21.73173320578282) (6,21.73074627519181) (7,21.72975992038634) (8,21.72877414103051) (9,21.72778893678858) (10,21.72680430732504) (11,21.72582025230454) (12,21.72483677139196) (13,21.72385386425235) (14,21.72287153055097) (15,21.72188976995327) (16,21.72090858212489) (17,21.71992796673168) (18,21.71894792343966) (19,21.71796845191507) (20,21.71698955182434) (21,21.71606974695603) (22,21.71515047871143) (23,21.71423174677746) (24,21.71331355084124) (25,21.71239589059007) (26,21.71147876571141) (27,21.71056217589292) (28,21.70964612082244) (29,21.708730600188) (30.000002,21.70781561184888)
H:
[0]: (0,0) (0,19.5) (30.000002,19.5)
C:
[0]: (0,0) (0,23.5) (30.000002,23.5)
 -- States explored : 371 states
 -- CPU user time used : 8 ms
 -- Virtual memory used : 65676 KiB
 -- Resident memory used : 25564 KiB
