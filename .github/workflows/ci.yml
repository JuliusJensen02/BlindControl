name: Run Python Tests on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest

    defaults:
      run:
        shell: pwsh
        working-directory: ./ 
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
        shell: bash  # This works in Bash

      # Fix: Set environment variables properly in PowerShell
      - name: Set environment variables from GitHub secrets
        shell: pwsh
        run: |
          Add-Content -Path $env:GITHUB_ENV -Value 'INFLUXDB_URL=${{ secrets.INFLUXDB_URL }}'
          Add-Content -Path $env:GITHUB_ENV -Value 'INFLUXDB_TOKEN=${{ secrets.INFLUXDB_TOKEN }}'
          Add-Content -Path $env:GITHUB_ENV -Value 'INFLUXDB_ORG=${{ secrets.INFLUXDB_ORG }}'
          Add-Content -Path $env:GITHUB_ENV -Value 'INFLUXDB_BUCKET=${{ secrets.INFLUXDB_BUCKET }}'
          Add-Content -Path $env:GITHUB_ENV -Value 'DMI_API_KEY=${{ secrets.DMI_API_KEY }}'


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Cache virtual environment
      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      # Set up virtual environment if not cached
      - name: Set up virtual environment
        shell: pwsh
        run: |
          if (!(Test-Path ".venv")) {
            python -m venv .venv
          }
        env:
          PYTHONPATH: ${{ github.workspace }}
          INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
          INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
          INFLUXDB_BUCKET: ${{ secrets.INFLUXDB_BUCKET }}
          DMI_API_KEY: ${{ secrets.DMI_API_KEY }}

      - name: Install dependencies and run tests
        shell: pwsh
        run: |
          .\.venv\Scripts\Activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt found"
          python -m pytest ./tests -p no:warnings